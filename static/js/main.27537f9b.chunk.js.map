{"version":3,"sources":["graphql/mutation.js","components/AddSong.js","components/Header.js","graphql/subscriptions.js","components/SongList.js","components/QueuedSongList.js","graphql/quiries.js","components/SongPlayer.js","reducer.js","App.js","theme.js","graphql/client.js","index.js"],"names":["ADD_OR_REMOVE_FROM_QUEUE","gql","ADD_SONG","useStyles","makeStyles","theme","container","display","alignItems","urlInput","margin","spacing","addSongButton","dialog","textAlign","thumbnail","width","DEFAULT_SONG","duration","title","artist","AddSong","classes","useMutation","addSong","error","useState","url","setUrl","playable","setPlayable","setDialog","song","setSong","handleChangeSong","e","target","name","value","prevSong","handleCloseDialog","a","player","nestedPlayer","getVideoData","songData","getYoutubeInfo","getCurrentSound","getSoundcloudInfo","variables","length","console","log","getDuration","video_id","author","Promise","resolve","Number","user","username","artwork_url","replace","handleError","field","graphQLErrors","extensions","path","includes","useEffect","isPlayable","SoundCloudPlayer","canPlay","YoutubePlayer","className","Dialog","open","onClose","DialogTitle","DialogContent","src","height","alt","TextField","onChange","label","fullWidth","helperText","DialogActions","Button","onClick","color","variant","placeholder","type","InputProps","startAdornment","InputAdornment","position","Link","disabled","endIcon","AddBoxOutlined","hidden","onReady","marginLeft","Header","AppBar","Toolbar","HeadsetTwoTone","Typography","component","GET_SONGS","songInfoContainer","songInfo","justifyContent","objectfit","Song","id","onCompleted","data","localStorage","setItem","JSON","stringify","addOrRemoveFromQueue","React","useContext","SongContext","state","dispatch","currentSongPlaying","setCurrentSongPlaying","handleSongChange","isSongPlaying","isPlaying","Card","CardMedia","image","CardContent","gutterBottom","IconButton","payload","size","Pause","PlayArrow","Tooltip","input","__typename","Save","SongList","useSubscription","loading","style","flexDirection","marginTop","CircularProgress","songs","map","avatar","text","textOverflow","overflow","gridAutoFlow","gridTemplateColumns","gridGap","whiteSpace","QueuedSong","Avatar","Delete","QueuedSongList","queue","useMediaQuery","breakpoints","up","i","GET_QUEUED_SONGS","details","padding","content","flex","controls","paddingLeft","paddingRight","playIcon","SongPlayer","seconds","useQuery","reactPlayerRef","useRef","played","setPlayed","playedSeconds","setPlayedSeconds","seeking","setSeeking","positionInQueue","setPositionInQueue","songIndex","findIndex","nextSong","SkipPrevious","SkipNext","Date","toISOString","substr","Slider","onMouseUp","current","seekTo","onMouseDown","newValue","min","max","step","ref","onProgress","playing","songReducer","action","createContext","App","initialSongState","useReducer","greaterThansm","greaterThanMd","Provider","Hidden","only","Grid","paddingTop","item","xs","md","right","top","left","bottom","createMuiTheme","palette","primary","red","secondary","main","yellow","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","cache","InMemoryCache","typeDefs","resolvers","Mutation","_","queryResult","readQuery","query","newQueue","some","filter","writeQuery","Boolean","getItem","parse","writeData","ReactDOM","render","ApolloProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.27537f9b.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\"\r\n\r\nexport const ADD_OR_REMOVE_FROM_QUEUE = gql`\r\n  mutation addOrRemoveFromQueue($input: SongInput!) {\r\n    addOrRemoveFromQueue(input: $input) @client\r\n  }\r\n`\r\n\r\nexport const ADD_SONG = gql`\r\n  mutation addSong(\r\n    $title: String!\r\n    $artist: String!\r\n    $thumbnail: String!\r\n    $duration: Float\r\n    $url: String\r\n  ) {\r\n    insert_songs(\r\n      objects: {\r\n        artist: $artist\r\n        duration: $duration\r\n        thumbnail: $thumbnail\r\n        title: $title\r\n        url: $url\r\n      }\r\n    ) {\r\n      affected_rows\r\n    }\r\n  }\r\n`\r\n// export const REMOVE_SONG = gql`\r\n//   mutation removeSong($id: uuid!) {\r\n//     delete_songs(where: { id: { _eq: $id } }) {\r\n//       returning {\r\n//         id\r\n//         artist\r\n//         created_at\r\n//         duration\r\n//         thumbnail\r\n//         title\r\n//         url\r\n//       }\r\n//     }\r\n//   }\r\n// `\r\n","import React, { useEffect, useState } from \"react\"\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  InputAdornment,\r\n  TextField,\r\n  makeStyles\r\n} from \"@material-ui/core\"\r\nimport { AddBoxOutlined, Link } from \"@material-ui/icons\"\r\nimport SoundCloudPlayer from \"react-player/lib/players/SoundCloud\"\r\nimport YoutubePlayer from \"react-player/lib/players/YouTube\"\r\nimport ReactPlayer from \"react-player\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { ADD_SONG } from \"../graphql/mutation\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  urlInput: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  addSongButton: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  dialog: {\r\n    textAlign: \"center\"\r\n  },\r\n  thumbnail: {\r\n    width: \"90%\"\r\n  }\r\n}))\r\n\r\nconst DEFAULT_SONG = {\r\n  duration: 0,\r\n  title: \"\",\r\n  artist: \"\",\r\n  thumbnail: \"\"\r\n}\r\n\r\nfunction AddSong() {\r\n  const classes = useStyles()\r\n  const [addSong, { error }] = useMutation(ADD_SONG)\r\n  const [url, setUrl] = useState(\"\")\r\n  const [playable, setPlayable] = useState(false)\r\n  const [dialog, setDialog] = useState(false)\r\n  const [song, setSong] = useState(DEFAULT_SONG)\r\n\r\n  useEffect(() => {\r\n    const isPlayable =\r\n      SoundCloudPlayer.canPlay(url) || YoutubePlayer.canPlay(url)\r\n    setPlayable(isPlayable)\r\n  }, [url])\r\n\r\n  function handleChangeSong(e) {\r\n    const { name, value } = e.target\r\n    setSong(prevSong => ({ ...prevSong, [name]: value }))\r\n  }\r\n\r\n  function handleCloseDialog() {\r\n    setDialog(false)\r\n  }\r\n\r\n  async function handleEditSong({ player }) {\r\n    const nestedPlayer = player.player.player\r\n    let songData\r\n    if (nestedPlayer.getVideoData) {\r\n      songData = getYoutubeInfo(nestedPlayer)\r\n    } else if (nestedPlayer.getCurrentSound) {\r\n      songData = await getSoundcloudInfo(nestedPlayer)\r\n    }\r\n    setSong({ ...songData, url })\r\n  }\r\n  async function handleAddSong() {\r\n    try {\r\n      const { url, thumbnail, duration, title, artist } = song\r\n      await addSong({\r\n        variables: {\r\n          url: url.length > 0 ? url : null,\r\n          thumbnail: thumbnail.length > 0 ? thumbnail : null,\r\n          duration: duration > 0 ? duration : null,\r\n          title: title.length > 0 ? title : null,\r\n          artist: artist.length > 0 ? artist : null\r\n        }\r\n      })\r\n      handleCloseDialog()\r\n      setSong(DEFAULT_SONG)\r\n      setUrl(\"\")\r\n    } catch (error) {\r\n      console.log(\"Error adding song\", error)\r\n    }\r\n  }\r\n\r\n  function getYoutubeInfo(player) {\r\n    const duration = player.getDuration()\r\n    const { title, video_id, author } = player.getVideoData()\r\n    const thumbnail = `http://img.youtube.com/vi/${video_id}/0.jpg`\r\n    return {\r\n      duration,\r\n      title,\r\n      artist: author,\r\n      thumbnail\r\n    }\r\n  }\r\n  function getSoundcloudInfo(player) {\r\n    return new Promise(resolve => {\r\n      player.getCurrentSound(songData => {\r\n        if (songData) {\r\n          resolve({\r\n            duration: Number(songData.duration / 1000),\r\n            title: songData.title,\r\n            artist: songData.user.username,\r\n            thumbnail: songData.artwork_url.replace(\"-large\", \"-t500x500\")\r\n          })\r\n        }\r\n      })\r\n    })\r\n  }\r\n  function handleError(field) {\r\n    return error?.graphQLErrors[0]?.extensions.path.includes(field)\r\n  }\r\n\r\n  const { thumbnail, title, artist } = song\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Dialog\r\n        className={classes.dialog}\r\n        open={dialog}\r\n        onClose={handleCloseDialog}\r\n      >\r\n        <DialogTitle>Edit Song</DialogTitle>\r\n        <DialogContent className={classes.thumbnail}>\r\n          <img src={thumbnail} height=\"540px\" alt=\"Song thumbnail\" />\r\n          <TextField\r\n            value={title}\r\n            onChange={handleChangeSong}\r\n            margin=\"dense\"\r\n            name=\"title\"\r\n            label=\"Title\"\r\n            fullWidth\r\n            error={handleError(\"title\")}\r\n            helperText={handleError(\"title\") && \"Fill out field\"}\r\n          />\r\n          <TextField\r\n            value={artist}\r\n            onChange={handleChangeSong}\r\n            margin=\"dense\"\r\n            name=\"artist\"\r\n            label=\"Artist\"\r\n            fullWidth\r\n            error={handleError(\"artist\")}\r\n            helperText={handleError(\"artist\") && \"Fill out field\"}\r\n          />\r\n          <TextField\r\n            value={thumbnail}\r\n            margin=\"dense\"\r\n            name=\"thumbnail\"\r\n            label=\"Thumbnail\"\r\n            fullWidth\r\n            error={handleError(\"thumbnail\")}\r\n            helperText={handleError(\"thumbnail\") && \"Fill out field\"}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAddSong} variant=\"outlined\" color=\"primary\">\r\n            Add Song\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <TextField\r\n        className={classes.urlInput}\r\n        onChange={e => setUrl(e.target.value)}\r\n        value={url}\r\n        placeholder=\"Add Youtube or Soundcloud Url\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        type=\"url\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <Link />\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n      />\r\n      <Button\r\n        disabled={!playable}\r\n        className={classes.addSongButton}\r\n        onClick={() => setDialog(true)}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        endIcon={<AddBoxOutlined />}\r\n      >\r\n        Add\r\n      </Button>\r\n      <ReactPlayer url={url} hidden onReady={handleEditSong} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddSong\r\n","import { AppBar, Toolbar, Typography, makeStyles } from \"@material-ui/core\"\r\nimport { HeadsetTwoTone } from \"@material-ui/icons\"\r\nimport React from \"react\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    marginLeft: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nfunction Header() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <AppBar color=\"primary\" position=\"fixed\">\r\n      <Toolbar>\r\n        <HeadsetTwoTone />\r\n        <Typography className={classes.title} variant=\"h6\" component=\"h1\">\r\n          SicMu\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\nexport default Header\r\n","import { gql } from \"apollo-boost\"\r\nexport const GET_SONGS = gql`\r\n  subscription getSongs {\r\n    songs(order_by: { created_at: desc }) {\r\n      artist\r\n      duration\r\n      id\r\n      thumbnail\r\n      title\r\n      url\r\n    }\r\n  }\r\n`\r\n","import { useSubscription } from \"@apollo/client\"\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  CircularProgress,\r\n  IconButton,\r\n  Typography,\r\n  makeStyles,\r\n  Tooltip\r\n} from \"@material-ui/core\"\r\nimport { Pause, PlayArrow, Save } from \"@material-ui/icons\"\r\n\r\nimport React from \"react\"\r\nimport { GET_SONGS } from \"../graphql/subscriptions\"\r\nimport { SongContext } from \"../App\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutation\"\r\n// import { REMOVE_SONG } from \"../graphql/mutation\"\r\n\r\nfunction SongList() {\r\n  const { data, loading, error } = useSubscription(GET_SONGS)\r\n\r\n  // const song = {\r\n  //   title: \"lune\",\r\n  //   artist: \"moon\",\r\n  //   thumbnail:\r\n  //     \"https://edm.com/.image/t_share/MTU5NDY5Nzk2NTUzOTI1OTA1/soundcloud.png\"\r\n  // }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          marginTop: 50\r\n        }}\r\n      >\r\n        <CircularProgress />\r\n      </div>\r\n    )\r\n  }\r\n  if (error) {\r\n    return <div>Error fetching songs</div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {data.songs.map(song => (\r\n        <Song key={song.id} song={song} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  songInfoContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  songInfo: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  thumbnail: {\r\n    objectfit: \"cover\",\r\n    width: 140,\r\n    height: 140\r\n  }\r\n}))\r\n\r\nfunction Song({ song }) {\r\n  const { id } = song\r\n  const classes = useStyles()\r\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\r\n    onCompleted: data => {\r\n      localStorage.setItem(\"queue\", JSON.stringify(data.addOrRemoveFromQueue))\r\n    }\r\n  })\r\n  // const [removeSong] = useMutation(REMOVE_SONG)\r\n\r\n  const { state, dispatch } = React.useContext(SongContext)\r\n  const [currentSongPlaying, setCurrentSongPlaying] = React.useState(false)\r\n  const { title, artist, thumbnail } = song\r\n\r\n  React.useEffect(() => {\r\n    const isSongPlaying = state.isPlaying && id === state.song.id\r\n    setCurrentSongPlaying(isSongPlaying)\r\n  }, [state.song.id, state.isPlaying])\r\n\r\n  function handleSongChange() {\r\n    console.log(\"changing\")\r\n  }\r\n\r\n  function handleTogglePlay() {\r\n    dispatch({ type: \"SET_SONG\", payload: { song } })\r\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" })\r\n  }\r\n  function handleAddOrRemoveFromQueue() {\r\n    addOrRemoveFromQueue({\r\n      variables: {\r\n        input: { ...song, __typename: \"Song\" }\r\n      }\r\n    })\r\n  }\r\n  // async function handleRemoveSong() {\r\n  //   const data = await removeSong({\r\n  //     variables: { id },\r\n  //     update: cache => {\r\n  //       const prevSongs = cache.readQuery({ query: GET_SONGS })\r\n  //       const newSongs = prevSongs.songs.filter(song => song.id !== id)\r\n  //       cache.writeQuery({ query: GET_SONGS, data: { song: newSongs } })\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  return (\r\n    <Card className={classes.container}>\r\n      <div className={classes.songInfoContainer}>\r\n        <CardMedia image={thumbnail} className={classes.thumbnail} />\r\n        <div className={classes.songInfo}>\r\n          <CardContent>\r\n            <Typography\r\n              onChange={handleSongChange}\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              component=\"h2\"\r\n            >\r\n              {title}\r\n            </Typography>\r\n            <Typography\r\n              onChange={handleSongChange}\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n            >\r\n              {artist}\r\n            </Typography>\r\n            <CardContent>\r\n              <IconButton\r\n                onClick={handleTogglePlay}\r\n                size=\"small\"\r\n                color=\"primary\"\r\n              >\r\n                {currentSongPlaying ? (\r\n                  <Pause color=\"yellow\" />\r\n                ) : (\r\n                  <PlayArrow color=\"secondary\" />\r\n                )}\r\n              </IconButton>\r\n              <Tooltip title=\"add to Playlist\">\r\n                <IconButton\r\n                  onClick={handleAddOrRemoveFromQueue}\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                >\r\n                  <Save color=\"secondary\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              {/* <Tooltip title=\"delete\">\r\n                <IconButton\r\n                  onClick={}\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                >\r\n                  <Delete color=\"error\" />\r\n                </IconButton>\r\n              </Tooltip> */}\r\n            </CardContent>\r\n          </CardContent>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SongList\r\n","import { useMutation } from \"@apollo/client\"\r\nimport {\r\n  Avatar,\r\n  IconButton,\r\n  makeStyles,\r\n  Typography,\r\n  useMediaQuery\r\n} from \"@material-ui/core\"\r\nimport { Delete } from \"@material-ui/icons\"\r\nimport React from \"react\"\r\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutation\"\r\n\r\nfunction QueuedSongList({ queue }) {\r\n  const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up(\"md\"))\r\n\r\n  // const song = {\r\n  //   title: \"lune\",\r\n  //   song: \"moon\",\r\n  //   thumbnail:\r\n  //     \"https://edm.com/.image/t_share/MTU5NDY5Nzk2NTUzOTI1OTA1/soundcloud.png\"\r\n  // }\r\n\r\n  return (\r\n    greaterThanMd && (\r\n      <div\r\n        style={{\r\n          margin: \"10px 0\"\r\n        }}\r\n      >\r\n        <Typography color=\"textSecondary\" variant=\"button\">\r\n          QUEUE ({queue.length})\r\n        </Typography>\r\n        {queue.map((song, i) => (\r\n          <QueuedSong key={i} song={song} />\r\n        ))}\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    width: 44,\r\n    height: 44\r\n  },\r\n  text: {\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\"\r\n  },\r\n  container: {\r\n    display: \"grid\",\r\n    gridAutoFlow: \"column\",\r\n    gridTemplateColumns: \"50px auto 50px\",\r\n    gridGap: 12,\r\n    alignItems: \"center\",\r\n    marginTop: 10\r\n  },\r\n  songInfoContainer: {\r\n    overflow: \"hidden\",\r\n    whiteSpace: \"nowrap\"\r\n  }\r\n})\r\n\r\nfunction QueuedSong({ song }) {\r\n  const classes = useStyles()\r\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\r\n    onCompleted: data => {\r\n      localStorage.setItem(\"queue\", JSON.stringify(data.addOrRemoveFromQueue))\r\n    }\r\n  })\r\n  const { thumbnail, artist, title } = song\r\n\r\n  function handleAddOrRemoveFromQueue() {\r\n    addOrRemoveFromQueue({\r\n      variables: {\r\n        input: { ...song, __typename: \"Song\" }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Avatar src={thumbnail} alt=\"Song thumbnail\" />\r\n      <div className={classes.songInfoContainer}>\r\n        <Typography variant=\"subtitle2\" className={classes.text}>\r\n          {title}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body2\"\r\n          className={classes.text}\r\n        >\r\n          {artist}\r\n        </Typography>\r\n      </div>\r\n      <IconButton onClick={handleAddOrRemoveFromQueue}>\r\n        <Delete color=\"error\" />\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QueuedSongList\r\n","import { gql } from \"apollo-boost\"\r\n\r\nexport const GET_QUEUED_SONGS = gql`\r\n  query getQueuedSongs {\r\n    queue @client {\r\n      id\r\n      duration\r\n      title\r\n      artist\r\n      thumbnail\r\n      url\r\n    }\r\n  }\r\n`\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  IconButton,\r\n  Typography,\r\n  Slider,\r\n  makeStyles\r\n} from \"@material-ui/core\"\r\nimport { Pause, PlayArrow, SkipNext, SkipPrevious } from \"@material-ui/icons\"\r\nimport React, { useState } from \"react\"\r\nimport QueuedSongList from \"./QueuedSongList\"\r\nimport { SongContext } from \"../App\"\r\nimport { useQuery } from \"@apollo/client\"\r\nimport { GET_QUEUED_SONGS } from \"../graphql/quiries\"\r\nimport ReactPlayer from \"react-player\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: \"0px 15px\"\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\"\r\n  },\r\n  thumbnail: {\r\n    width: 150\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38\r\n  }\r\n}))\r\n\r\nfunction SongPlayer() {\r\n  const { data } = useQuery(GET_QUEUED_SONGS)\r\n  const reactPlayerRef = React.useRef()\r\n  const { state, dispatch } = React.useContext(SongContext)\r\n  const [played, setPlayed] = useState(0)\r\n  const [playedSeconds, setPlayedSeconds] = useState(0)\r\n  const [seeking, setSeeking] = React.useState(false)\r\n  const [positionInQueue, setPositionInQueue] = useState(0)\r\n  const classes = useStyles()\r\n\r\n  React.useEffect(() => {\r\n    const songIndex = data.queue.findIndex(song => song.id === state.song.id)\r\n    setPositionInQueue(songIndex)\r\n  }, [data.queue, state.song.id])\r\n\r\n  React.useEffect(() => {\r\n    const nextSong = data.queue[positionInQueue + 1]\r\n    if (played === 0.99 && nextSong) {\r\n      setPlayed(0)\r\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } })\r\n    }\r\n  }, [data.queue, played, dispatch, positionInQueue])\r\n\r\n  function handleTogglePlay() {\r\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" })\r\n  }\r\n\r\n  function handleProgressrChange(e, newValue) {\r\n    setPlayed(newValue)\r\n  }\r\n\r\n  function handleSeekMouseDown() {\r\n    setSeeking(true)\r\n  }\r\n  function handleSeekMouseUp() {\r\n    setSeeking(false)\r\n    reactPlayerRef.current.seekTo(played)\r\n  }\r\n  function formatDuration(seconds) {\r\n    return new Date(seconds * 1000).toISOString().substr(11, 8)\r\n  }\r\n  function handlePlayPrevSong() {\r\n    const prevSong = data.queue[positionInQueue - 1]\r\n    if (prevSong) {\r\n      dispatch({ type: \"SET_SONG\", payload: { song: prevSong } })\r\n    }\r\n  }\r\n  function handlePlayNextSong() {\r\n    const nextSong = data.queue[positionInQueue + 1]\r\n    if (nextSong) {\r\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.container} variant=\"outlined\">\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography variant=\"h5\" component=\"h3\">\r\n              {state.song.title}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\r\n              {state.song.artist}\r\n            </Typography>\r\n          </CardContent>\r\n          <div className={classes.controls}>\r\n            <IconButton onClick={handlePlayPrevSong}>\r\n              <SkipPrevious />\r\n            </IconButton>\r\n            <IconButton onClick={handleTogglePlay}>\r\n              {state.isPlaying ? (\r\n                <Pause className={classes.playIcon} />\r\n              ) : (\r\n                <PlayArrow className={classes.playIcon} />\r\n              )}\r\n            </IconButton>\r\n            <IconButton onClick={handlePlayNextSong}>\r\n              <SkipNext />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\r\n              {formatDuration(playedSeconds)}\r\n            </Typography>\r\n          </div>\r\n          <Slider\r\n            onMouseUp={handleSeekMouseUp}\r\n            onMouseDown={handleSeekMouseDown}\r\n            onChange={handleProgressrChange}\r\n            value={played}\r\n            type=\"range\"\r\n            min={0}\r\n            max={1}\r\n            step={0.01}\r\n          />\r\n        </div>\r\n        <ReactPlayer\r\n          ref={reactPlayerRef}\r\n          onProgress={({ played, playedSeconds }) => {\r\n            if (!seeking) {\r\n              setPlayed(played)\r\n              setPlayedSeconds(playedSeconds)\r\n            }\r\n          }}\r\n          url={state.song.url}\r\n          playing={state.isPlaying}\r\n          hidden\r\n        />\r\n        <CardMedia className={classes.thumbnail} image={state.song.thumbnail} />\r\n      </Card>\r\n      <QueuedSongList queue={data.queue} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SongPlayer\r\n","function songReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"PLAY_SONG\": {\r\n      return {\r\n        ...state,\r\n        isPlaying: true\r\n      }\r\n    }\r\n    case \"PAUSE_SONG\": {\r\n      return {\r\n        ...state,\r\n        isPlaying: false\r\n      }\r\n    }\r\n    case \"SET_SONG\": {\r\n      return {\r\n        ...state,\r\n        song: action.payload.song\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default songReducer\r\n","import React, { useContext, useReducer } from \"react\"\nimport AddSong from \"./components/AddSong\"\nimport Header from \"./components/Header\"\nimport SongList from \"./components/SongList\"\nimport SongPlayer from \"./components/SongPlayer\"\nimport { Grid, useMediaQuery, Hidden } from \"@material-ui/core\"\nimport songReducer from \"./reducer\"\n// import SongContext from \"./components/SongContext\"\n\n// header\n// search song\n// list of songs\n// play list\nexport const SongContext = React.createContext({\n  song: {\n    id: \"b45a2f2b-4118-43c1-b829-0a4a66b4123a\",\n    title: \"Music Mix 2021 🎧 Remixes of Popular Songs 🎧 EDM Best Music Mix\",\n    artist: \"magic music\",\n    thumbnail: \"http://img.youtube.com/vi/EIecjyG4vxs/0.jpg\",\n    url: \"https://www.youtube.com/watch?v=EIecjyG4vxs\",\n    duration: 4760\n  },\n  isPlaying: false\n})\n\nfunction App() {\n  const initialSongState = useContext(SongContext)\n  const [state, dispatch] = useReducer(songReducer, initialSongState)\n  const greaterThansm = useMediaQuery(theme => theme.breakpoints.up(\"sm\"))\n  const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up(\"md\"))\n\n  return (\n    <SongContext.Provider value={{ state, dispatch }}>\n      <Hidden only=\"xs\">\n        <Header />\n      </Hidden>\n\n      <Grid container spacing={3}>\n        <Grid\n          style={{\n            paddingTop: greaterThansm ? 80 : 10\n          }}\n          item\n          xs={12}\n          md={7}\n        >\n          <AddSong />\n          <SongList />\n        </Grid>\n        <Grid\n          style={\n            greaterThanMd\n              ? { position: \"fixed\", width: \"100%\", right: 0, top: 70 }\n              : {\n                  position: \"fixed\",\n                  width: \"100%\",\n                  left: 0,\n                  bottom: 0\n                }\n          }\n          item\n          xs={12}\n          md={5}\n        >\n          <SongPlayer />\n        </Grid>\n      </Grid>\n    </SongContext.Provider>\n  )\n}\n\nexport default App\n","import { createMuiTheme } from \"@material-ui/core/styles\"\r\nimport { red } from \"@material-ui/core/colors\"\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: red,\r\n    secondary: {\r\n      main: \"#94FFC0\"\r\n    },\r\n    yellow: {\r\n      main: \"#ffd359\"\r\n    }\r\n  }\r\n})\r\n\r\nexport default theme\r\n","import ApolloClient from \"apollo-client\"\r\nimport { WebSocketLink } from \"apollo-link-ws\"\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\r\nimport { gql } from \"apollo-boost\"\r\nimport { GET_QUEUED_SONGS } from \"./quiries\"\r\n\r\nconst client = new ApolloClient({\r\n  link: new WebSocketLink({\r\n    uri: \"wss://sicmu.hasura.app/v1/graphql\",\r\n    options: {\r\n      reconnect: true\r\n    }\r\n  }),\r\n  cache: new InMemoryCache(),\r\n  typeDefs: gql`\r\n    type Song {\r\n      id: uuid!\r\n      title: String!\r\n      artist: String!\r\n      thumbnail: String!\r\n      duration: Float!\r\n      url: String!\r\n    }\r\n\r\n    input SongInput {\r\n      id: uuid!\r\n      title: String!\r\n      artist: String!\r\n      thumbnail: String!\r\n      duration: Float!\r\n      url: String!\r\n    }\r\n\r\n    type Query {\r\n      queue: [Song]!\r\n    }\r\n\r\n    type Mutation {\r\n      addOrRemoveFromQueue(input: SongInput!): [Song]!\r\n    }\r\n  `,\r\n  resolvers: {\r\n    Mutation: {\r\n      addOrRemoveFromQueue: (_, { input }, { cache }) => {\r\n        const queryResult = cache.readQuery({\r\n          query: GET_QUEUED_SONGS\r\n        })\r\n        if (queryResult) {\r\n          const { queue } = queryResult\r\n          const isInQueue = queue.some(song => song.id === input.id)\r\n          const newQueue = isInQueue\r\n            ? queue.filter(song => song.id !== input.id)\r\n            : [...queue, input]\r\n          cache.writeQuery({\r\n            query: GET_QUEUED_SONGS,\r\n            data: { queue: newQueue }\r\n          })\r\n          return newQueue\r\n        }\r\n        return []\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nconst hasQueue = Boolean(localStorage.getItem(\"queue\"))\r\n\r\nconst data = {\r\n  queue: hasQueue ? JSON.parse(localStorage.getItem(\"queue\")) : []\r\n}\r\n\r\nclient.writeData({ data })\r\n// import ApolloClient from \"apollo-boost\"\r\n\r\n// const client = new ApolloClient({\r\n//   uri: 'https://sicmu.hasura.app/v1/graphql'\r\n// })\r\n\r\nexport default client\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport { CssBaseline, MuiThemeProvider } from \"@material-ui/core\"\nimport { ApolloProvider } from \"@apollo/react-hooks\"\nimport theme from \"./theme\"\nimport client from \"./graphql/client\"\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </MuiThemeProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}